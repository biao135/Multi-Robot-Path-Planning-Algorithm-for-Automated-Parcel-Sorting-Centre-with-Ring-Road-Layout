using System;
using System.Threading;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using UnityEngine;
using TMPro;

public class CentralSystem : MonoBehaviour
{
    [SerializeField]
    private GameObject intersection;
    [SerializeField]
    private GameObject left;
    [SerializeField]
    private GameObject right;
    [SerializeField]
    private GameObject up;
    [SerializeField]
    private GameObject down;
    [SerializeField]
    private GameObject curve;
    [SerializeField]
    private GameObject pickup;
    [SerializeField]
    private GameObject dropoff;
    [SerializeField]
    private GameObject charging;
    [SerializeField]
    private GameObject notused;
    [SerializeField]
    private GameObject entrance;
    [SerializeField]
    private GameObject exit;
    [SerializeField]
    private GameObject robot;
    [SerializeField]
    private GameObject throughputCounterObject;
    private TextMeshPro throughputCounter;
    [SerializeField]
    private GameObject robotCounterObject;
    private TextMeshPro robotCounter;
    // Start is called before the first frame update

    void Start()
    {
        int mainThreadId = Thread.CurrentThread.ManagedThreadId;
        Thread mainThread = Thread.CurrentThread;
        mainThread.Priority = System.Threading.ThreadPriority.Highest;

        throughputCounter = throughputCounterObject.GetComponent<TMPro.TextMeshPro>();
        robotCounter = robotCounterObject.GetComponent<TMPro.TextMeshPro>();
        // Create Vertices
        // 0 = intersection
        // 1 = left
        // 2 = right
        // 3 = up
        // 4 = down
        // 5 = curve
        // 6 = pickup points
        // 7 = dropoff points
        // 8 = charging points
        // 9 = not used
        int[,] graph = new int[,] {
{9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9},
{9,5,5,5,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,5,5,5,9},
{9,5,5,5,2,0,0,2,0,0,2,0,0,2,0,0,2,0,0,2,0,0,2,0,0,2,0,0,2,0,0,2,0,0,2,0,0,2,2,2,0,0,2,0,0,2,0,0,2,0,0,2,0,0,2,0,0,2,0,0,2,0,0,2,0,0,2,0,0,2,0,0,2,5,5,5,9},
{9,5,5,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,1,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,5,5,9},
{9,3,3,4,6,3,4,6,3,4,6,3,4,6,3,4,6,3,4,6,3,4,6,3,4,6,3,4,6,3,4,6,3,4,6,3,4,6,6,6,3,4,6,3,4,6,3,4,6,3,4,6,3,4,6,3,4,6,3,4,6,3,4,6,3,4,6,3,4,6,3,4,6,3,4,4,9},
{9,3,0,0,2,0,0,2,0,0,2,0,0,2,0,0,2,0,0,2,0,0,2,0,0,2,0,0,2,0,0,2,0,0,2,0,0,2,2,2,0,0,2,0,0,2,0,0,2,0,0,2,0,0,2,0,0,2,0,0,2,0,0,2,0,0,2,0,0,2,0,0,2,0,0,4,9},
{9,3,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,1,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,4,9},
{9,3,3,4,6,3,4,6,3,4,6,3,4,6,3,4,6,3,4,6,3,4,6,3,4,6,3,4,6,3,4,6,3,4,6,3,4,6,6,6,3,4,6,3,4,6,3,4,6,3,4,6,3,4,6,3,4,6,3,4,6,3,4,6,3,4,6,3,4,6,3,4,6,3,4,4,9},
{9,3,0,0,2,0,0,2,0,0,2,0,0,2,0,0,2,0,0,2,0,0,2,0,0,2,0,0,2,0,0,2,0,0,2,0,0,2,2,2,0,0,2,0,0,2,0,0,2,0,0,2,0,0,2,0,0,2,0,0,2,0,0,2,0,0,2,0,0,2,0,0,2,0,0,4,9},
{9,3,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,1,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,4,9},
{9,3,3,4,6,3,4,6,3,4,6,3,4,6,3,4,6,3,4,6,3,4,6,3,4,6,3,4,6,3,4,6,3,4,6,3,4,6,6,6,3,4,6,3,4,6,3,4,6,3,4,6,3,4,6,3,4,6,3,4,6,3,4,6,3,4,6,3,4,6,3,4,6,3,4,4,9},
{9,3,0,0,2,0,0,2,0,0,2,0,0,2,0,0,2,0,0,2,0,0,2,0,0,2,0,0,2,0,0,2,0,0,2,0,0,2,2,2,0,0,2,0,0,2,0,0,2,0,0,2,0,0,2,0,0,2,0,0,2,0,0,2,0,0,2,0,0,2,0,0,2,0,0,4,9},
{9,3,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,1,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,4,9},
{9,3,3,4,8,3,4,8,8,8,8,3,4,8,8,8,8,3,4,8,8,8,8,3,4,8,8,8,8,3,4,8,8,8,8,3,4,8,8,8,3,4,8,8,8,8,3,4,8,8,8,8,3,4,8,8,8,8,3,4,8,8,8,8,3,4,8,8,8,8,3,4,8,3,4,4,9},
{9,3,3,4,8,3,4,8,8,8,8,3,4,8,8,8,8,3,4,8,8,8,8,3,4,8,8,8,8,3,4,8,8,8,8,3,4,8,8,8,3,4,8,8,8,8,3,4,8,8,8,8,3,4,8,8,8,8,3,4,8,8,8,8,3,4,8,8,8,8,3,4,8,3,4,4,9},
{9,3,0,0,2,0,0,2,2,2,2,0,0,2,2,2,2,0,0,2,2,2,2,0,0,2,2,2,2,0,0,2,2,2,2,0,0,2,2,2,0,0,2,2,2,2,0,0,2,2,2,2,0,0,2,2,2,2,0,0,2,2,2,2,0,0,2,2,2,2,0,0,2,0,0,4,9},
{9,3,0,0,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,0,0,4,9},
{9,3,3,4,8,3,4,7,7,7,7,3,4,7,7,7,7,3,4,7,7,7,7,3,4,7,7,7,7,3,4,7,7,7,7,3,4,7,7,7,3,4,7,7,7,7,3,4,7,7,7,7,3,4,7,7,7,7,3,4,7,7,7,7,3,4,7,7,7,7,3,4,8,3,4,4,9},
{9,3,0,0,2,0,0,2,2,2,2,0,0,2,2,2,2,0,0,2,2,2,2,0,0,2,2,2,2,0,0,2,2,2,2,0,0,2,2,2,0,0,2,2,2,2,0,0,2,2,2,2,0,0,2,2,2,2,0,0,2,2,2,2,0,0,2,2,2,2,0,0,2,0,0,4,9},
{9,3,0,0,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,0,0,4,9},
{9,3,3,4,8,3,4,7,7,7,7,3,4,7,7,7,7,3,4,7,7,7,7,3,4,7,7,7,7,3,4,7,7,7,7,3,4,7,7,7,3,4,7,7,7,7,3,4,7,7,7,7,3,4,7,7,7,7,3,4,7,7,7,7,3,4,7,7,7,7,3,4,8,3,4,4,9},
{9,3,0,0,2,0,0,2,2,2,2,0,0,2,2,2,2,0,0,2,2,2,2,0,0,2,2,2,2,0,0,2,2,2,2,0,0,2,2,2,0,0,2,2,2,2,0,0,2,2,2,2,0,0,2,2,2,2,0,0,2,2,2,2,0,0,2,2,2,2,0,0,2,0,0,4,9},
{9,3,0,0,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,0,0,4,9},
{9,3,3,4,8,3,4,7,7,7,7,3,4,7,7,7,7,3,4,7,7,7,7,3,4,7,7,7,7,3,4,7,7,7,7,3,4,7,7,7,3,4,7,7,7,7,3,4,7,7,7,7,3,4,7,7,7,7,3,4,7,7,7,7,3,4,7,7,7,7,3,4,8,3,4,4,9},
{9,3,0,0,2,0,0,2,2,2,2,0,0,2,2,2,2,0,0,2,2,2,2,0,0,2,2,2,2,0,0,2,2,2,2,0,0,2,2,2,0,0,2,2,2,2,0,0,2,2,2,2,0,0,2,2,2,2,0,0,2,2,2,2,0,0,2,2,2,2,0,0,2,0,0,4,9},
{9,3,0,0,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,0,0,4,9},
{9,3,3,4,8,3,4,7,7,7,7,3,4,7,7,7,7,3,4,7,7,7,7,3,4,7,7,7,7,3,4,7,7,7,7,3,4,7,7,7,3,4,7,7,7,7,3,4,7,7,7,7,3,4,7,7,7,7,3,4,7,7,7,7,3,4,7,7,7,7,3,4,8,3,4,4,9},
{9,3,0,0,2,0,0,2,2,2,2,0,0,2,2,2,2,0,0,2,2,2,2,0,0,2,2,2,2,0,0,2,2,2,2,0,0,2,2,2,0,0,2,2,2,2,0,0,2,2,2,2,0,0,2,2,2,2,0,0,2,2,2,2,0,0,2,2,2,2,0,0,2,0,0,4,9},
{9,3,0,0,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,0,0,4,9},
{9,3,3,4,8,3,4,7,7,7,7,3,4,7,7,7,7,3,4,7,7,7,7,3,4,7,7,7,7,3,4,7,7,7,7,3,4,7,7,7,3,4,7,7,7,7,3,4,7,7,7,7,3,4,7,7,7,7,3,4,7,7,7,7,3,4,7,7,7,7,3,4,8,3,4,4,9},
{9,3,0,0,2,0,0,2,2,2,2,0,0,2,2,2,2,0,0,2,2,2,2,0,0,2,2,2,2,0,0,2,2,2,2,0,0,2,2,2,0,0,2,2,2,2,0,0,2,2,2,2,0,0,2,2,2,2,0,0,2,2,2,2,0,0,2,2,2,2,0,0,2,0,0,4,9},
{9,3,0,0,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,0,0,4,9},
{9,3,3,4,8,3,4,7,7,7,7,3,4,7,7,7,7,3,4,7,7,7,7,3,4,7,7,7,7,3,4,7,7,7,7,3,4,7,7,7,3,4,7,7,7,7,3,4,7,7,7,7,3,4,7,7,7,7,3,4,7,7,7,7,3,4,7,7,7,7,3,4,8,3,4,4,9},
{9,3,0,0,2,0,0,2,2,2,2,0,0,2,2,2,2,0,0,2,2,2,2,0,0,2,2,2,2,0,0,2,2,2,2,0,0,2,2,2,0,0,2,2,2,2,0,0,2,2,2,2,0,0,2,2,2,2,0,0,2,2,2,2,0,0,2,2,2,2,0,0,2,0,0,4,9},
{9,3,0,0,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,0,0,4,9},
{9,3,3,4,8,3,4,7,7,7,7,3,4,7,7,7,7,3,4,7,7,7,7,3,4,7,7,7,7,3,4,7,7,7,7,3,4,7,7,7,3,4,7,7,7,7,3,4,7,7,7,7,3,4,7,7,7,7,3,4,7,7,7,7,3,4,7,7,7,7,3,4,8,3,4,4,9},
{9,3,0,0,2,0,0,2,2,2,2,0,0,2,2,2,2,0,0,2,2,2,2,0,0,2,2,2,2,0,0,2,2,2,2,0,0,2,2,2,0,0,2,2,2,2,0,0,2,2,2,2,0,0,2,2,2,2,0,0,2,2,2,2,0,0,2,2,2,2,0,0,2,0,0,4,9},
{9,3,0,0,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,0,0,4,9},
{9,3,3,4,8,3,4,7,7,7,7,3,4,7,7,7,7,3,4,7,7,7,7,3,4,7,7,7,7,3,4,7,7,7,7,3,4,7,7,7,3,4,7,7,7,7,3,4,7,7,7,7,3,4,7,7,7,7,3,4,7,7,7,7,3,4,7,7,7,7,3,4,8,3,4,4,9},
{9,3,0,0,2,0,0,2,2,2,2,0,0,2,2,2,2,0,0,2,2,2,2,0,0,2,2,2,2,0,0,2,2,2,2,0,0,2,2,2,0,0,2,2,2,2,0,0,2,2,2,2,0,0,2,2,2,2,0,0,2,2,2,2,0,0,2,2,2,2,0,0,2,0,0,4,9},
{9,3,0,0,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,0,0,4,9},
{9,3,3,4,8,3,4,7,7,7,7,3,4,7,7,7,7,3,4,7,7,7,7,3,4,7,7,7,7,3,4,7,7,7,7,3,4,7,7,7,3,4,7,7,7,7,3,4,7,7,7,7,3,4,7,7,7,7,3,4,7,7,7,7,3,4,7,7,7,7,3,4,8,3,4,4,9},
{9,3,0,0,2,0,0,2,2,2,2,0,0,2,2,2,2,0,0,2,2,2,2,0,0,2,2,2,2,0,0,2,2,2,2,0,0,2,2,2,0,0,2,2,2,2,0,0,2,2,2,2,0,0,2,2,2,2,0,0,2,2,2,2,0,0,2,2,2,2,0,0,2,0,0,4,9},
{9,3,0,0,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,0,0,4,9},
{9,3,3,4,8,3,4,7,7,7,7,3,4,7,7,7,7,3,4,7,7,7,7,3,4,7,7,7,7,3,4,7,7,7,7,3,4,7,7,7,3,4,7,7,7,7,3,4,7,7,7,7,3,4,7,7,7,7,3,4,7,7,7,7,3,4,7,7,7,7,3,4,8,3,4,4,9},
{9,3,0,0,2,0,0,2,2,2,2,0,0,2,2,2,2,0,0,2,2,2,2,0,0,2,2,2,2,0,0,2,2,2,2,0,0,2,2,2,0,0,2,2,2,2,0,0,2,2,2,2,0,0,2,2,2,2,0,0,2,2,2,2,0,0,2,2,2,2,0,0,2,0,0,4,9},
{9,3,0,0,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,0,0,4,9},
{9,3,3,4,8,3,4,7,7,7,7,3,4,7,7,7,7,3,4,7,7,7,7,3,4,7,7,7,7,3,4,7,7,7,7,3,4,7,7,7,3,4,7,7,7,7,3,4,7,7,7,7,3,4,7,7,7,7,3,4,7,7,7,7,3,4,7,7,7,7,3,4,8,3,4,4,9},
{9,3,0,0,2,0,0,2,2,2,2,0,0,2,2,2,2,0,0,2,2,2,2,0,0,2,2,2,2,0,0,2,2,2,2,0,0,2,2,2,0,0,2,2,2,2,0,0,2,2,2,2,0,0,2,2,2,2,0,0,2,2,2,2,0,0,2,2,2,2,0,0,2,0,0,4,9},
{9,3,0,0,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,0,0,4,9},
{9,3,3,4,8,3,4,7,7,7,7,3,4,7,7,7,7,3,4,7,7,7,7,3,4,7,7,7,7,3,4,7,7,7,7,3,4,7,7,7,3,4,7,7,7,7,3,4,7,7,7,7,3,4,7,7,7,7,3,4,7,7,7,7,3,4,7,7,7,7,3,4,8,3,4,4,9},
{9,3,0,0,2,0,0,2,2,2,2,0,0,2,2,2,2,0,0,2,2,2,2,0,0,2,2,2,2,0,0,2,2,2,2,0,0,2,2,2,0,0,2,2,2,2,0,0,2,2,2,2,0,0,2,2,2,2,0,0,2,2,2,2,0,0,2,2,2,2,0,0,2,0,0,4,9},
{9,3,0,0,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,0,0,4,9},
{9,3,3,4,8,3,4,7,7,7,7,3,4,7,7,7,7,3,4,7,7,7,7,3,4,7,7,7,7,3,4,7,7,7,7,3,4,7,7,7,3,4,7,7,7,7,3,4,7,7,7,7,3,4,7,7,7,7,3,4,7,7,7,7,3,4,7,7,7,7,3,4,8,3,4,4,9},
{9,3,0,0,2,0,0,2,2,2,2,0,0,2,2,2,2,0,0,2,2,2,2,0,0,2,2,2,2,0,0,2,2,2,2,0,0,2,2,2,0,0,2,2,2,2,0,0,2,2,2,2,0,0,2,2,2,2,0,0,2,2,2,2,0,0,2,2,2,2,0,0,2,0,0,4,9},
{9,3,0,0,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,0,0,4,9},
{9,3,3,4,8,3,4,7,7,7,7,3,4,7,7,7,7,3,4,7,7,7,7,3,4,7,7,7,7,3,4,7,7,7,7,3,4,7,7,7,3,4,7,7,7,7,3,4,7,7,7,7,3,4,7,7,7,7,3,4,7,7,7,7,3,4,7,7,7,7,3,4,8,3,4,4,9},
{9,3,0,0,2,0,0,2,2,2,2,0,0,2,2,2,2,0,0,2,2,2,2,0,0,2,2,2,2,0,0,2,2,2,2,0,0,2,2,2,0,0,2,2,2,2,0,0,2,2,2,2,0,0,2,2,2,2,0,0,2,2,2,2,0,0,2,2,2,2,0,0,2,0,0,4,9},
{9,3,0,0,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,0,0,4,9},
{9,3,3,4,8,3,4,7,7,7,7,3,4,7,7,7,7,3,4,7,7,7,7,3,4,7,7,7,7,3,4,7,7,7,7,3,4,7,7,7,3,4,7,7,7,7,3,4,7,7,7,7,3,4,7,7,7,7,3,4,7,7,7,7,3,4,7,7,7,7,3,4,8,3,4,4,9},
{9,3,0,0,2,0,0,2,2,2,2,0,0,2,2,2,2,0,0,2,2,2,2,0,0,2,2,2,2,0,0,2,2,2,2,0,0,2,2,2,0,0,2,2,2,2,0,0,2,2,2,2,0,0,2,2,2,2,0,0,2,2,2,2,0,0,2,2,2,2,0,0,2,0,0,4,9},
{9,3,0,0,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,0,0,4,9},
{9,3,3,4,8,3,4,8,8,8,8,3,4,8,8,8,8,3,4,8,8,8,8,3,4,8,8,8,8,3,4,8,8,8,8,3,4,8,8,8,3,4,8,8,8,8,3,4,8,8,8,8,3,4,8,8,8,8,3,4,8,8,8,8,3,4,8,8,8,8,3,4,8,3,4,4,9},
{9,3,3,4,8,3,4,8,8,8,8,3,4,8,8,8,8,3,4,8,8,8,8,3,4,8,8,8,8,3,4,8,8,8,8,3,4,8,8,8,3,4,8,8,8,8,3,4,8,8,8,8,3,4,8,8,8,8,3,4,8,8,8,8,3,4,8,8,8,8,3,4,8,3,4,4,9},
{9,3,0,0,2,0,0,2,0,0,2,0,0,2,0,0,2,0,0,2,0,0,2,0,0,2,0,0,2,0,0,2,0,0,2,0,0,2,2,2,0,0,2,0,0,2,0,0,2,0,0,2,0,0,2,0,0,2,0,0,2,0,0,2,0,0,2,0,0,2,0,0,2,0,0,4,9},
{9,3,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,1,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,4,9},
{9,3,3,4,6,3,4,6,3,4,6,3,4,6,3,4,6,3,4,6,3,4,6,3,4,6,3,4,6,3,4,6,3,4,6,3,4,6,6,6,3,4,6,3,4,6,3,4,6,3,4,6,3,4,6,3,4,6,3,4,6,3,4,6,3,4,6,3,4,6,3,4,6,3,4,4,9},
{9,3,0,0,2,0,0,2,0,0,2,0,0,2,0,0,2,0,0,2,0,0,2,0,0,2,0,0,2,0,0,2,0,0,2,0,0,2,2,2,0,0,2,0,0,2,0,0,2,0,0,2,0,0,2,0,0,2,0,0,2,0,0,2,0,0,2,0,0,2,0,0,2,0,0,4,9},
{9,3,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,1,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,4,9},
{9,3,3,4,6,3,4,6,3,4,6,3,4,6,3,4,6,3,4,6,3,4,6,3,4,6,3,4,6,3,4,6,3,4,6,3,4,6,6,6,3,4,6,3,4,6,3,4,6,3,4,6,3,4,6,3,4,6,3,4,6,3,4,6,3,4,6,3,4,6,3,4,6,3,4,4,9},
{9,3,0,0,2,0,0,2,0,0,2,0,0,2,0,0,2,0,0,2,0,0,2,0,0,2,0,0,2,0,0,2,0,0,2,0,0,2,2,2,0,0,2,0,0,2,0,0,2,0,0,2,0,0,2,0,0,2,0,0,2,0,0,2,0,0,2,0,0,2,0,0,2,0,0,4,9},
{9,3,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,1,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,4,9},
{9,3,3,4,6,3,4,6,3,4,6,3,4,6,3,4,6,3,4,6,3,4,6,3,4,6,3,4,6,3,4,6,3,4,6,3,4,6,6,6,3,4,6,3,4,6,3,4,6,3,4,6,3,4,6,3,4,6,3,4,6,3,4,6,3,4,6,3,4,6,3,4,6,3,4,4,9},
{9,5,5,0,2,0,0,2,0,0,2,0,0,2,0,0,2,0,0,2,0,0,2,0,0,2,0,0,2,0,0,2,0,0,2,0,0,2,2,2,0,0,2,0,0,2,0,0,2,0,0,2,0,0,2,0,0,2,0,0,2,0,0,2,0,0,2,0,0,2,0,0,2,0,5,5,9},
{9,5,5,5,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,1,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,5,5,5,9},
{9,5,5,5,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,5,5,5,9},
{9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9}
        };

        // define ring road
        // 0 = not ring road
        // 1 = ring road
        // 2 = ring road exit
        // 3 = ring road entrance

        int[,] ringRoad = new int[,]{
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,1,2,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,3,1,0,0,0,0},
{0,0,0,0,0,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0},
{0,2,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,3,0},
{0,2,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,3,0},
{0,2,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,3,0},
{0,2,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,3,0},
{0,2,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,3,0},
{0,2,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,3,0},
{0,2,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,3,0},
{0,2,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,3,0},
{0,2,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,3,0},
{0,3,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,2,0},
{0,3,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,2,0},
{0,3,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,2,0},
{0,3,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,2,0},
{0,3,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,2,0},
{0,3,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,2,0},
{0,3,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,2,0},
{0,3,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,2,0},
{0,3,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,2,0},
{0,3,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,2,0},
{0,3,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,2,0},
{0,3,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,2,0},
{0,2,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,3,0},
{0,2,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,3,0},
{0,2,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,3,0},
{0,2,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,3,0},
{0,2,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,3,0},
{0,2,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,3,0},
{0,2,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,3,0},
{0,2,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,3,0},
{0,2,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,3,0},
{0,2,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,3,0},
{0,2,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,3,0},
{0,2,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,3,0},
{0,1,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,1,0},
{0,3,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,2,0},
{0,3,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,2,0},
{0,3,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,2,0},
{0,3,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,2,0},
{0,3,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,2,0},
{0,3,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,2,0},
{0,3,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,2,0},
{0,3,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,2,0},
{0,3,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,2,0},
{0,3,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,2,0},
{0,3,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,2,0},
{0,3,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,2,0},
{0,2,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,3,0},
{0,2,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,3,0},
{0,2,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,3,0},
{0,2,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,3,0},
{0,2,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,3,0},
{0,2,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,3,0},
{0,2,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,3,0},
{0,2,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,3,0},
{0,2,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,3,0},
{0,2,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,3,0},
{0,2,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,3,0},
{0,2,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,3,0},
{0,3,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,2,0},
{0,3,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,2,0},
{0,3,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,2,0},
{0,3,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,2,0},
{0,3,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,2,0},
{0,3,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,2,0},
{0,3,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,2,0},
{0,3,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,2,0},
{0,3,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,2,0},
{0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,0,0,0,0,0},
{0,0,0,0,1,3,3,3,3,3,3,3,3,3,3,3,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,2,2,2,2,2,2,2,2,1,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
        };

        Server server = new Server(graph, ringRoad, throughputCounter, robotCounter);

        // create areas, top left point, bottom right point
        server.addArea(new Area(1, new int[] { 74, 2 }, new int[] { 38, 38 }, server));
        server.addArea(new Area(2, new int[] { 74, 38 }, new int[] { 38, 74 }, server));
        server.addArea(new Area(3, new int[] { 37, 38 }, new int[] { 2, 74 }, server));
        server.addArea(new Area(4, new int[] { 37, 2 }, new int[] { 2, 38 }, server));
        server.setBufferArea(new int[] { 29, 46 }, new int[] { 47, 30 });

        // add curve to to turn
        // robot self rotation = 90 degrees per sec, minimum 3 radius to make turn at full speed

        // area 1
        server.addCurve(0, new int[] { 75, 4 }, new int[] { 72, 1 }, new float[] { 72, 4 }, 90, 180, 3, false);
        // area 2
        server.addCurve(1, new int[] { 72, 75 }, new int[] { 75, 72 }, new float[] { 72, 72 }, 0, 90, 3, false);
        // area 3
        server.addCurve(2, new int[] { 1, 72 }, new int[] { 4, 75 }, new float[] { 4, 72 }, 270, 360, 3, false);
        // area 4
        server.addCurve(3, new int[] { 4, 1 }, new int[] { 1, 4 }, new float[] { 4, 4 }, 180, 270, 3, false);
        server.initializeOuterRingRoad();

        // set entrances and exits to use
        // type:
        // 1: set exit
        // 2: set entrance

        // task:
        // 1: pick up or charging
        // 2: drop off

        //--------------------------------------------------
        //top
        server.setExitEntrances(1, 2, 2, new int[] { 75, 5 }, new int[] { 75, 15 });
        server.setExitEntrances(1, 1, 1, new int[] { 75, 16 }, new int[] { 75, 37 });
        server.setExitEntrances(2, 2, 2, new int[] { 75, 39 }, new int[] { 75, 60 });
        server.setExitEntrances(2, 1, 1, new int[] { 75, 61 }, new int[] { 75, 71 });

        //--------------------------------------------------
        //right

        server.setExitEntrances(2, 1, 1, new int[] { 71, 75 }, new int[] { 63, 75 });
        server.setExitEntrances(2, 2, 1, new int[] { 62, 75 }, new int[] { 51, 75 });
        server.setExitEntrances(2, 1, 2, new int[] { 50, 75 }, new int[] { 39, 75 });

        server.setExitEntrances(3, 2, 1, new int[] { 37, 75 }, new int[] { 26, 75 });
        server.setExitEntrances(3, 1, 2, new int[] { 25, 75 }, new int[] { 14, 75 });
        server.setExitEntrances(3, 2, 2, new int[] { 13, 75 }, new int[] { 5, 75 });

        //--------------------------------------------------
        //bottom

        server.setExitEntrances(3, 2, 2, new int[] { 1, 71 }, new int[] { 1, 61 });
        server.setExitEntrances(3, 1, 1, new int[] { 1, 60 }, new int[] { 1, 39 });
        server.setExitEntrances(4, 2, 2, new int[] { 1, 37 }, new int[] { 1, 16 });
        server.setExitEntrances(4, 1, 1, new int[] { 1, 15 }, new int[] { 1, 5 });

        //--------------------------------------------------
        // left

        server.setExitEntrances(4, 1, 1, new int[] { 5, 1 }, new int[] { 13, 1 });
        server.setExitEntrances(4, 2, 1, new int[] { 14, 1 }, new int[] { 25, 1 });
        server.setExitEntrances(4, 1, 2, new int[] { 26, 1 }, new int[] { 37, 1 });

        server.setExitEntrances(1, 2, 1, new int[] { 39, 1 }, new int[] { 50, 1 });
        server.setExitEntrances(1, 1, 2, new int[] { 51, 1 }, new int[] { 62, 1 });
        server.setExitEntrances(1, 2, 2, new int[] { 63, 1 }, new int[] { 71, 1 });
        //--------------------------------------------------



        int[] shape = server.getShape();

        //display map tile images
        for (int i = 0; i <= shape[0]; i++){
            for (int j = 0; j <= shape[1]; j++){
                switch(graph[i,j]) 
                {
                    case 0:
                        Instantiate(intersection, new Vector3(j, i, -10), Quaternion.identity);
                        break;
                    case 1:
                        Instantiate(left, new Vector3(j, i, -10), Quaternion.identity);
                        break;
                    case 2:
                        Instantiate(right, new Vector3(j, i, -10), Quaternion.identity);
                        break;
                    case 3:
                        Instantiate(up, new Vector3(j, i, -10), Quaternion.identity);
                        break;
                    case 4:
                        Instantiate(down, new Vector3(j, i, -10), Quaternion.identity);
                        break;
                    case 5:
                        Instantiate(curve, new Vector3(j, i, -10), Quaternion.identity);
                        break;
                    case 6:
                        Instantiate(pickup, new Vector3(j, i, -10), Quaternion.identity);
                        break;
                    case 7:
                        Instantiate(dropoff, new Vector3(j, i, -10), Quaternion.identity);
                        break;
                    case 8:
                        Instantiate(charging, new Vector3(j, i, -10), Quaternion.identity);
                        break;
                    case 9:
                        Instantiate(notused, new Vector3(j, i, -10), Quaternion.identity);
                        break;
                    default:
                        break;
                }

                switch(ringRoad[i,j])
                {
                    case 2:
                        Instantiate(exit, new Vector3(j, i, -11), Quaternion.identity);
                        break;
                    case 3:
                        Instantiate(entrance, new Vector3(j, i, -11), Quaternion.identity);
                        break;
                    default:
                        break;
                }
            }
        }
        
        // server.findVertex(new int[] {5, 5}).setIsOuterRingRoadCorner(true);
        // server.findVertex(new int[] {5, 71}).setIsOuterRingRoadCorner(true);
        // server.findVertex(new int[] {71, 5}).setIsOuterRingRoadCorner(true);
        // server.findVertex(new int[] {71, 71}).setIsOuterRingRoadCorner(true);


        int[,] spawnSpots = new int[,]{
            {71, 10}, {71, 11}, {71, 12}, {71, 13},
            {71, 22}, {71, 23}, {71, 24}, {71, 25},
            {71, 45}, {71, 46}, {71, 47}, {71, 48},
            {71, 57}, {71, 58}, {71, 59}, {71, 60},
            {71, 69}, {71, 70}, {71, 71}, {71, 72},

            {70, 4},  {70, 5},  {70, 6},  {70, 7},
            {70, 16}, {70, 17}, {70, 18}, {70, 19},
            {70, 28}, {70, 29}, {70, 30}, {70, 31},
            {70, 51}, {70, 52}, {70, 53}, {70, 54},
            {70, 63}, {70, 64}, {70, 65}, {70, 66},



            {68, 10}, {68, 11}, {68, 12}, {68, 13},
            {68, 22}, {68, 23}, {68, 24}, {68, 25},
            {68, 45}, {68, 46}, {68, 47}, {68, 48},
            {68, 57}, {68, 58}, {68, 59}, {68, 60},
            {68, 69}, {68, 70}, {68, 71}, {68, 72},

            {67, 4},  {67, 5},  {67, 6},  {67, 7},
            {67, 16}, {67, 17}, {67, 18}, {67, 19},
            {67, 28}, {67, 29}, {67, 30}, {67, 31},
            {67, 51}, {67, 52}, {67, 53}, {67, 54},
            {67, 63}, {67, 64}, {67, 65}, {67, 66},



            {65, 10}, {65, 11}, {65, 12}, {65, 13},
            {65, 22}, {65, 23}, {65, 24}, {65, 25},
            {65, 45}, {65, 46}, {65, 47}, {65, 48},
            {65, 57}, {65, 58}, {65, 59}, {65, 60},
            {65, 69}, {65, 70}, {65, 71}, {65, 72},

            {64, 4},  {64, 5},  {64, 6},  {64, 7},
            {64, 16}, {64, 17}, {64, 18}, {64, 19},
            {64, 28}, {64, 29}, {64, 30}, {64, 31},
            {64, 51}, {64, 52}, {64, 53}, {64, 54},
            {64, 63}, {64, 64}, {64, 65}, {64, 66},



            {61, 10}, {61, 11}, {61, 12}, {61, 13},
            {61, 22}, {61, 23}, {61, 24}, {61, 25},
            {61, 45}, {61, 46}, {61, 47}, {61, 48},
            {61, 57}, {61, 58}, {61, 59}, {61, 60},
            {61, 69}, {61, 70}, {61, 71}, {61, 72},

            {60, 4},  {60, 5},  {60, 6},  {60, 7},
            {60, 16}, {60, 17}, {60, 18}, {60, 19},
            {60, 28}, {60, 29}, {60, 30}, {60, 31},
            {60, 51}, {60, 52}, {60, 53}, {60, 54},
            {60, 63}, {60, 64}, {60, 65}, {60, 66},



            {58, 10}, {58, 11}, {58, 12}, {58, 13},
            {58, 22}, {58, 23}, {58, 24}, {58, 25},
            {58, 45}, {58, 46}, {58, 47}, {58, 48},
            {58, 57}, {58, 58}, {58, 59}, {58, 60},
            {58, 69}, {58, 70}, {58, 71}, {58, 72},

            {57, 4},  {57, 5},  {57, 6},  {57, 7},
            {57, 16}, {57, 17}, {57, 18}, {57, 19},
            {57, 28}, {57, 29}, {57, 30}, {57, 31},
            {57, 51}, {57, 52}, {57, 53}, {57, 54},
            {57, 63}, {57, 64}, {57, 65}, {57, 66},



            {55, 10}, {55, 11}, {55, 12}, {55, 13},
            {55, 22}, {55, 23}, {55, 24}, {55, 25},
            {55, 45}, {55, 46}, {55, 47}, {55, 48},
            {55, 57}, {55, 58}, {55, 59}, {55, 60},
            {55, 69}, {55, 70}, {55, 71}, {55, 72},

            {54, 4},  {54, 5},  {54, 6},  {54, 7},
            {54, 16}, {54, 17}, {54, 18}, {54, 19},
            {54, 28}, {54, 29}, {54, 30}, {54, 31},
            {54, 51}, {54, 52}, {54, 53}, {54, 54},
            {54, 63}, {54, 64}, {54, 65}, {54, 66},



            {52, 10}, {52, 11}, {52, 12}, {52, 13},
            {52, 22}, {52, 23}, {52, 24}, {52, 25},
            {52, 45}, {52, 46}, {52, 47}, {52, 48},
            {52, 57}, {52, 58}, {52, 59}, {52, 60},
            {52, 69}, {52, 70}, {52, 71}, {52, 72},

            {51, 4},  {51, 5},  {51, 6},  {51, 7},
            {51, 16}, {51, 17}, {51, 18}, {51, 19},
            {51, 28}, {51, 29}, {51, 30}, {51, 31},
            {51, 51}, {51, 52}, {51, 53}, {51, 54},
            {51, 63}, {51, 64}, {51, 65}, {51, 66},



            {49, 10}, {49, 11}, {49, 12}, {49, 13},
            {49, 22}, {49, 23}, {49, 24}, {49, 25},
            {49, 45}, {49, 46}, {49, 47}, {49, 48},
            {49, 57}, {49, 58}, {49, 59}, {49, 60},
            {49, 69}, {49, 70}, {49, 71}, {49, 72},

            {48, 4},  {48, 5},  {48, 6},  {48, 7},
            {48, 16}, {48, 17}, {48, 18}, {48, 19},
            {48, 28}, {48, 29}, {48, 30}, {48, 31},
            {48, 51}, {48, 52}, {48, 53}, {48, 54},
            {48, 63}, {48, 64}, {48, 65}, {48, 66},



            {46, 10}, {46, 11}, {46, 12}, {46, 13},
            {46, 22}, {46, 23}, {46, 24}, {46, 25},
            {46, 45}, {46, 46}, {46, 47}, {46, 48},
            {46, 57}, {46, 58}, {46, 59}, {46, 60},
            {46, 69}, {46, 70}, {46, 71}, {46, 72},

            {45, 4},  {45, 5},  {45, 6},  {45, 7},
            {45, 16}, {45, 17}, {45, 18}, {45, 19},
            {45, 28}, {45, 29}, {45, 30}, {45, 31},
            {45, 51}, {45, 52}, {45, 53}, {45, 54},
            {45, 63}, {45, 64}, {45, 65}, {45, 66},



            {43, 10}, {43, 11}, {43, 12}, {43, 13},
            {43, 22}, {43, 23}, {43, 24}, {43, 25},
            {43, 45}, {43, 46}, {43, 47}, {43, 48},
            {43, 57}, {43, 58}, {43, 59}, {43, 60},
            {43, 69}, {43, 70}, {43, 71}, {43, 72},

            {42, 4},  {42, 5},  {42, 6},  {42, 7},
            {42, 16}, {42, 17}, {42, 18}, {42, 19},
            {42, 28}, {42, 29}, {42, 30}, {42, 31},
            {42, 51}, {42, 52}, {42, 53}, {42, 54},
            {42, 63}, {42, 64}, {42, 65}, {42, 66},



            {40, 10}, {40, 11}, {40, 12}, {40, 13},
            {40, 22}, {40, 23}, {40, 24}, {40, 25},
            {40, 45}, {40, 46}, {40, 47}, {40, 48},
            {40, 57}, {40, 58}, {40, 59}, {40, 60},
            {40, 69}, {40, 70}, {40, 71}, {40, 72},

            {39, 4},  {39, 5},  {39, 6},  {39, 7},
            {39, 16}, {39, 17}, {39, 18}, {39, 19},
            {39, 28}, {39, 29}, {39, 30}, {39, 31},
            {39, 51}, {39, 52}, {39, 53}, {39, 54},
            {39, 63}, {39, 64}, {39, 65}, {39, 66},



            {37, 10}, {37, 11}, {37, 12}, {37, 13},
            {37, 22}, {37, 23}, {37, 24}, {37, 25},
            {37, 45}, {37, 46}, {37, 47}, {37, 48},
            {37, 57}, {37, 58}, {37, 59}, {37, 60},
            {37, 69}, {37, 70}, {37, 71}, {37, 72},

            {36, 4},  {36, 5},  {36, 6},  {36, 7},
            {36, 16}, {36, 17}, {36, 18}, {36, 19},
            {36, 28}, {36, 29}, {36, 30}, {36, 31},
            {36, 51}, {36, 52}, {36, 53}, {36, 54},
            {36, 63}, {36, 64}, {36, 65}, {36, 66},



            {34, 10}, {34, 11}, {34, 12}, {34, 13},
            {34, 22}, {34, 23}, {34, 24}, {34, 25},
            {34, 45}, {34, 46}, {34, 47}, {34, 48},
            {34, 57}, {34, 58}, {34, 59}, {34, 60},
            {34, 69}, {34, 70}, {34, 71}, {34, 72},

            {33, 4},  {33, 5},  {33, 6},  {33, 7},
            {33, 16}, {33, 17}, {33, 18}, {33, 19},
            {33, 28}, {33, 29}, {33, 30}, {33, 31},
            {33, 51}, {33, 52}, {33, 53}, {33, 54},
            {33, 63}, {33, 64}, {33, 65}, {33, 66},



            {31, 10}, {31, 11}, {31, 12}, {31, 13},
            {31, 22}, {31, 23}, {31, 24}, {31, 25},
            {31, 45}, {31, 46}, {31, 47}, {31, 48},
            {31, 57}, {31, 58}, {31, 59}, {31, 60},
            {31, 69}, {31, 70}, {31, 71}, {31, 72},

            {30, 4},  {30, 5},  {30, 6},  {30, 7},
            {30, 16}, {30, 17}, {30, 18}, {30, 19},
            {30, 28}, {30, 29}, {30, 30}, {30, 31},
            {30, 51}, {30, 52}, {30, 53}, {30, 54},
            {30, 63}, {30, 64}, {30, 65}, {30, 66},



            {28, 10}, {28, 11}, {28, 12}, {28, 13},
            {28, 22}, {28, 23}, {28, 24}, {28, 25},
            {28, 45}, {28, 46}, {28, 47}, {28, 48},
            {28, 57}, {28, 58}, {28, 59}, {28, 60},
            {28, 69}, {28, 70}, {28, 71}, {28, 72},

            {27, 4},  {27, 5},  {27, 6},  {27, 7},
            {27, 16}, {27, 17}, {27, 18}, {27, 19},
            {27, 28}, {27, 29}, {27, 30}, {27, 31},
            {27, 51}, {27, 52}, {27, 53}, {27, 54},
            {27, 63}, {27, 64}, {27, 65}, {27, 66},



            {25, 10}, {25, 11}, {25, 12}, {25, 13},
            {25, 22}, {25, 23}, {25, 24}, {25, 25},
            {25, 45}, {25, 46}, {25, 47}, {25, 48},
            {25, 57}, {25, 58}, {25, 59}, {25, 60},
            {25, 69}, {25, 70}, {25, 71}, {25, 72},

            {24, 4},  {24, 5},  {24, 6},  {24, 7},
            {24, 16}, {24, 17}, {24, 18}, {24, 19},
            {24, 28}, {24, 29}, {24, 30}, {24, 31},
            {24, 51}, {24, 52}, {24, 53}, {24, 54},
            {24, 63}, {24, 64}, {24, 65}, {24, 66},



            {22, 10}, {22, 11}, {22, 12}, {22, 13},
            {22, 22}, {22, 23}, {22, 24}, {22, 25},
            {22, 45}, {22, 46}, {22, 47}, {22, 48},
            {22, 57}, {22, 58}, {22, 59}, {22, 60},
            {22, 69}, {22, 70}, {22, 71}, {22, 72},

            {21, 4},  {21, 5},  {21, 6},  {21, 7},
            {21, 16}, {21, 17}, {21, 18}, {21, 19},
            {21, 28}, {21, 29}, {21, 30}, {21, 31},
            {21, 51}, {21, 52}, {21, 53}, {21, 54},
            {21, 63}, {21, 64}, {21, 65}, {21, 66},



            {19, 10}, {19, 11}, {19, 12}, {19, 13},
            {19, 22}, {19, 23}, {19, 24}, {19, 25},
            {19, 45}, {19, 46}, {19, 47}, {19, 48},
            {19, 57}, {19, 58}, {19, 59}, {19, 60},
            {19, 69}, {19, 70}, {19, 71}, {19, 72},

            {18, 4},  {18, 5},  {18, 6},  {18, 7},
            {18, 16}, {18, 17}, {18, 18}, {18, 19},
            {18, 28}, {18, 29}, {18, 30}, {18, 31},
            {18, 51}, {18, 52}, {18, 53}, {18, 54},
            {18, 63}, {18, 64}, {18, 65}, {18, 66},



            {16, 10}, {16, 11}, {16, 12}, {16, 13},
            {16, 22}, {16, 23}, {16, 24}, {16, 25},
            {16, 45}, {16, 46}, {16, 47}, {16, 48},
            {16, 57}, {16, 58}, {16, 59}, {16, 60},
            {16, 69}, {16, 70}, {16, 71}, {16, 72},

            {15, 4},  {15, 5},  {15, 6},  {15, 7},
            {15, 16}, {15, 17}, {15, 18}, {15, 19},
            {15, 28}, {15, 29}, {15, 30}, {15, 31},
            {15, 51}, {15, 52}, {15, 53}, {15, 54},
            {15, 63}, {15, 64}, {15, 65}, {15, 66},



            {12, 10}, {12, 11}, {12, 12}, {12, 13},
            {12, 22}, {12, 23}, {12, 24}, {12, 25},
            {12, 45}, {12, 46}, {12, 47}, {12, 48},
            {12, 57}, {12, 58}, {12, 59}, {12, 60},
            {12, 69}, {12, 70}, {12, 71}, {12, 72},

            {11, 4},  {11, 5},  {11, 6},  {11, 7},
            {11, 16}, {11, 17}, {11, 18}, {11, 19},
            {11, 28}, {11, 29}, {11, 30}, {11, 31},
            {11, 51}, {11, 52}, {11, 53}, {11, 54},
            {11, 63}, {11, 64}, {11, 65}, {11, 66},



            {9, 10}, {9, 11}, {9, 12}, {9, 13},
            {9, 22}, {9, 23}, {9, 24}, {9, 25},
            {9, 45}, {9, 46}, {9, 47}, {9, 48},
            {9, 57}, {9, 58}, {9, 59}, {9, 60},
            {9, 69}, {9, 70}, {9, 71}, {9, 72},

            {8, 4},  {8, 5},  {8, 6},  {8, 7},
            {8, 16}, {8, 17}, {8, 18}, {8, 19},
            {8, 28}, {8, 29}, {8, 30}, {8, 31},
            {8, 51}, {8, 52}, {8, 53}, {8, 54},
            {8, 63}, {8, 64}, {8, 65}, {8, 66},



            {6, 10}, {6, 11}, {6, 12}, {6, 13},
            {6, 22}, {6, 23}, {6, 24}, {6, 25},
            {6, 45}, {6, 46}, {6, 47}, {6, 48},
            {6, 57}, {6, 58}, {6, 59}, {6, 60},
            {6, 69}, {6, 70}, {6, 71}, {6, 72},

            //{5, 4},  {5, 5},  {5, 6},  {5, 7},
            //{5, 16}, {5, 17}, {5, 18}, {5, 19},
            //{5, 28}, {5, 29}, {5, 30}, {5, 31},
            //{5, 51}, {5, 52}, {5, 53}, {5, 54},
            //{5, 63}, {5, 64}, {5, 65}, {5, 66},

            // --------------------------------------------------------------------------
             //{71, 34}, {71, 35}, {71, 36}, {71, 37},
             //{70, 39}, {70, 40}, {70, 41}, {70, 42},

             //{68, 34}, {68, 35}, {68, 36}, {68, 37},
             //{67, 39}, {67, 40}, {67, 41}, {67, 42},

             //{65, 34}, {65, 35}, {65, 36}, {65, 37},
             //{64, 39}, {64, 40}, {64, 41}, {64, 42},

             //{61, 34}, {61, 35}, {61, 36}, {61, 37},
             //{60, 39}, {60, 40}, {60, 41}, {60, 42},

             //{58, 34}, {58, 35}, {58, 36}, {58, 37},
             //{57, 39}, {57, 40}, {57, 41}, {57, 42},

             //{55, 34}, {55, 35}, {55, 36}, {55, 37},
             //{54, 39}, {54, 40}, {54, 41}, {54, 42},

             //{52, 34}, {52, 35}, {52, 36}, {52, 37},
             //{51, 39}, {51, 40}, {51, 41}, {51, 42},

             //{49, 34}, {49, 35}, {49, 36}, {49, 37},
             //{48, 39}, {48, 40}, {48, 41}, {48, 42},

             //{46, 34}, {46, 35}, {46, 36}, {46, 37},
             //{45, 39}, {45, 40}, {45, 41}, {45, 42},

             //{43, 34}, {43, 35}, {43, 36}, {43, 37},
             //{42, 39}, {42, 40}, {42, 41}, {42, 42},

             //{40, 34}, {40, 35}, {40, 36}, {40, 37},
             //{39, 39}, {39, 40}, {39, 41}, {39, 42},

             //{37, 34}, {37, 35}, {37, 36}, {37, 37},
             //{36, 39}, {36, 40}, {36, 41}, {36, 42},

             //{34, 34}, {34, 35}, {34, 36}, {34, 37},
             //{33, 39}, {33, 40}, {33, 41}, {33, 42},

             //{31, 34}, {31, 35}, {31, 36}, {31, 37},
             //{30, 39}, {30, 40}, {30, 41}, {30, 42},

             //{28, 34}, {28, 35}, {28, 36}, {28, 37},
             //{27, 39}, {27, 40}, {27, 41}, {27, 42},

             //{25, 34}, {25, 35}, {25, 36}, {25, 37},
             //{24, 39}, {24, 40}, {24, 41}, {24, 42},

             //{22, 34}, {22, 35}, {22, 36}, {22, 37},
             //{21, 39}, {21, 40}, {21, 41}, {21, 42},

             //{19, 34}, {19, 35}, {19, 36}, {19, 37},
             //{18, 39}, {18, 40}, {18, 41}, {18, 42},

             //{16, 34}, {16, 35}, {16, 36}, {16, 37},
             //{15, 39}, {15, 40}, {15, 41}, {15, 42},

             //{12, 34}, {12, 35}, {12, 36}, {12, 37},
             //{11, 39}, {11, 40}, {11, 41}, {11, 42},

            // {9, 34}, {9, 35}, {9, 36}, {9, 37},
            // {8, 39}, {8, 40}, {8, 41}, {8, 42},

            // {6, 34}, {6, 35}, {6, 36}, {6, 37},
            // {5, 39}, {5, 40}, {5, 41}, {5, 42},
        };

        // int spawnNum = 1;
        int spawnNum = spawnSpots.GetUpperBound(0);

        System.Random rdm = new System.Random();
        int robotCount = 0;
        for (int i = 0; i < spawnNum + 1; i++){
            GameObject AMR = (GameObject) Instantiate(robot, new Vector3(spawnSpots[i,1], spawnSpots[i,0], -20), Quaternion.identity);
            AMR.GetComponent<RobotMovement>().Initialize(i, server, new int[] {spawnSpots[i,0], spawnSpots[i,1]}, 0.02f, rdm);
            robotCount ++;
        }
        server.displayRobotCount(robotCount);

        QualitySettings.vSyncCount = 0;
        Application.targetFrameRate = 200;
    }
}
